[{"I:\\honeybear-project-starter\\src\\index.tsx":"1","I:\\honeybear-project-starter\\src\\reportWebVitals.ts":"2","I:\\honeybear-project-starter\\src\\App.tsx":"3","I:\\honeybear-project-starter\\src\\libs\\ui\\Modal.tsx":"4","I:\\honeybear-project-starter\\src\\Routemap.tsx":"5","I:\\honeybear-project-starter\\src\\Page\\Landing\\index.tsx":"6","I:\\honeybear-project-starter\\src\\Page\\Landing\\TestUi.tsx":"7","I:\\honeybear-project-starter\\src\\Page\\Landing\\Navbar.tsx":"8","I:\\honeybear-project-starter\\src\\libs\\ui\\Text.tsx":"9","I:\\honeybear-project-starter\\src\\libs\\ui\\TextInput.tsx":"10","I:\\Reception\\src\\index.tsx":"11","I:\\Reception\\src\\reportWebVitals.ts":"12","I:\\Reception\\src\\App.tsx":"13","I:\\Reception\\src\\Routemap.tsx":"14","I:\\Reception\\src\\libs\\ui\\Text.tsx":"15","I:\\Reception\\src\\libs\\ui\\TextInput.tsx":"16","I:\\Reception\\src\\libs\\ui\\Modal.tsx":"17","I:\\Reception\\src\\libs\\ui\\Dropdown.tsx":"18","I:\\Reception\\src\\Page\\Landing\\index.tsx":"19","I:\\Reception\\src\\Page\\Landing\\Navbar.tsx":"20","I:\\Reception\\src\\Page\\Theme\\Main\\index.tsx":"21","I:\\Reception\\src\\Page\\Theme\\Main\\Navbar.tsx":"22","I:\\Reception\\src\\Page\\Landing\\Login.tsx":"23","I:\\Reception\\src\\libs\\ui\\Button.tsx":"24","I:\\Reception\\src\\libs\\ui\\Image.tsx":"25","I:\\Reception\\src\\Page\\Landing\\Register.tsx":"26","I:\\Reception\\src\\Page\\Landing\\Whatis.tsx":"27","I:\\Reception\\src\\Page\\Landing\\About.tsx":"28","I:\\Reception\\src\\Page\\Landing\\Pricing.tsx":"29","I:\\Reception\\src\\Page\\Theme\\index.tsx":"30"},{"size":532,"mtime":1610243879313,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1606390186683,"results":"33","hashOfConfig":"32"},{"size":199,"mtime":1610284262630,"results":"34","hashOfConfig":"32"},{"size":1202,"mtime":1610249572916,"results":"35","hashOfConfig":"32"},{"size":238,"mtime":1610282136560,"results":"36","hashOfConfig":"32"},{"size":1437,"mtime":1611210285669,"results":"37","hashOfConfig":"32"},{"size":1682,"mtime":1611214361948,"results":"38","hashOfConfig":"32"},{"size":399,"mtime":1610283954976,"results":"39","hashOfConfig":"32"},{"size":266,"mtime":1611210843956,"results":"40","hashOfConfig":"32"},{"size":634,"mtime":1611214319548,"results":"41","hashOfConfig":"32"},{"size":550,"mtime":1612683726750,"results":"42","hashOfConfig":"43"},{"size":440,"mtime":1612683726756,"results":"44","hashOfConfig":"43"},{"size":208,"mtime":1612686480597,"results":"45","hashOfConfig":"43"},{"size":440,"mtime":1614591236893,"results":"46","hashOfConfig":"43"},{"size":421,"mtime":1614589128743,"results":"47","hashOfConfig":"43"},{"size":644,"mtime":1612933322380,"results":"48","hashOfConfig":"43"},{"size":1202,"mtime":1612683726752,"results":"49","hashOfConfig":"50"},{"size":1217,"mtime":1612933321279,"results":"51","hashOfConfig":"43"},{"size":2767,"mtime":1614592406089,"results":"52","hashOfConfig":"43"},{"size":2530,"mtime":1614402545201,"results":"53","hashOfConfig":"43"},{"size":1440,"mtime":1612872156832,"results":"54","hashOfConfig":"43"},{"size":1914,"mtime":1612878997764,"results":"55","hashOfConfig":"43"},{"size":2973,"mtime":1614402832877,"results":"56","hashOfConfig":"43"},{"size":504,"mtime":1612933321007,"results":"57","hashOfConfig":"43"},{"size":423,"mtime":1614402795779,"results":"58","hashOfConfig":"43"},{"size":3304,"mtime":1614398890527,"results":"59","hashOfConfig":"43"},{"size":2023,"mtime":1614402924583,"results":"60","hashOfConfig":"43"},{"size":2440,"mtime":1614592384066,"results":"61","hashOfConfig":"43"},{"size":293,"mtime":1614404012662,"results":"62","hashOfConfig":"43"},{"size":259,"mtime":1614591255802,"results":"63","hashOfConfig":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"13pap50",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1abe3yb",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jr59vp",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"I:\\honeybear-project-starter\\src\\index.tsx",[],["135","136"],"I:\\honeybear-project-starter\\src\\reportWebVitals.ts",[],"I:\\honeybear-project-starter\\src\\App.tsx",[],"I:\\honeybear-project-starter\\src\\libs\\ui\\Modal.tsx",[],"I:\\honeybear-project-starter\\src\\Routemap.tsx",[],"I:\\honeybear-project-starter\\src\\Page\\Landing\\index.tsx",[],"I:\\honeybear-project-starter\\src\\Page\\Landing\\TestUi.tsx",[],"I:\\honeybear-project-starter\\src\\Page\\Landing\\Navbar.tsx",["137","138","139","140"],"import { observer, useLocalObservable } from \"mobx-react-lite\";\r\n\r\nexport default observer(() => {\r\n  return (\r\n    <div id=\"navbar\" className=\"w-full absolute top-0 bg-yellow-400\">\r\n      <div className=\"flex flex-row justify-evenly py-5 px-8 font-bold text-white\">\r\n        <a href=\"#\">Home</a>\r\n        <a href=\"#\">About</a>\r\n        <a href=\"#\">Contact</a>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","I:\\honeybear-project-starter\\src\\libs\\ui\\Text.tsx",[],"I:\\honeybear-project-starter\\src\\libs\\ui\\TextInput.tsx",[],"I:\\Reception\\src\\index.tsx",[],["141","142"],"I:\\Reception\\src\\reportWebVitals.ts",[],"I:\\Reception\\src\\App.tsx",[],"I:\\Reception\\src\\Routemap.tsx",[],"I:\\Reception\\src\\libs\\ui\\Text.tsx",[],"I:\\Reception\\src\\libs\\ui\\TextInput.tsx",[],"I:\\Reception\\src\\libs\\ui\\Modal.tsx",[],"I:\\Reception\\src\\libs\\ui\\Dropdown.tsx",[],"I:\\Reception\\src\\Page\\Landing\\index.tsx",["143"],"I:\\Reception\\src\\Page\\Landing\\Navbar.tsx",["144","145","146","147"],"import { observer, useLocalObservable } from \"mobx-react-lite\";\r\nimport Dropdown from \"libs/ui/Dropdown\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport { user } from \"Page/Landing\";\r\nimport Text from \"libs/ui/Text\";\r\n\r\nexport default observer(() => {\r\n  const meta = useLocalObservable(() => ({ open: false as any }));\r\n\r\n  return (\r\n    <div\r\n      id=\"navbar\"\r\n      className=\"w-screen absolute top-0 bg-transparent lg:p-10 p-5\"\r\n    >\r\n      <div className=\"flex flex-row items-center md:py-4 md:px-5 font-bold text-black \">\r\n        <div className=\"w-1/2 flex-col flex\">\r\n          <Text className=\"text-white lg:text-3xl text-xl font-semibold\">\r\n            Honeyday\r\n          </Text>\r\n          <Text className=\"text-white font-light lg:text-base text-xs\">\r\n            Wedding Management System\r\n          </Text>\r\n        </div>\r\n        <div className=\"w-1/2 invisible lg:visible flex flex-row items-center justify-around rounded-full lg:py-2 lg:px-8 lg:bg-white\">\r\n          <a href=\"#whatis\">What is Honeyday?</a>\r\n          <a href=\"#about\">About</a>\r\n          <a href=\"#\">Price</a>\r\n          <a href=\"#\">Contact</a>\r\n          <a\r\n            className=\"px-5 py-1 bg-blue rounded-full text-white\"\r\n            href=\"#login\"\r\n          >\r\n            {user.current}\r\n          </a>\r\n        </div>\r\n        <div className=\"lg:invisible md:visible justify-end\">\r\n          <Mobile open={meta.open} onclick={() => (meta.open = !meta.open)} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Mobile = observer(({ open, onclick }: any) => {\r\n  return (\r\n    <Dropdown caption={<DehazeIcon />} open={open} onClick={onclick}>\r\n      <a\r\n        href=\"#whatis\"\r\n        className=\"block px-4 py-2 text-sm text-gray hover:bg-gray hover:text-gray\"\r\n        role=\"menuitem\"\r\n      >\r\n        What is Honeyday?\r\n      </a>\r\n      <a\r\n        href=\"#about\"\r\n        className=\"block px-4 py-2 text-sm text-gray hover:bg-gray hover:text-gray\"\r\n        role=\"menuitem\"\r\n      >\r\n        About\r\n      </a>\r\n      <a\r\n        href=\"#\"\r\n        className=\"block px-4 py-2 text-sm text-gray hover:bg-gray hover:text-gray\"\r\n        role=\"menuitem\"\r\n      >\r\n        Price\r\n      </a>\r\n      <a\r\n        href=\"#\"\r\n        className=\"block px-4 py-2 text-sm text-gray hover:bg-gray hover:text-gray\"\r\n        role=\"menuitem\"\r\n      >\r\n        Contact\r\n      </a>\r\n      <a className=\"px-5 py-1 bg-blue rounded-full text-white\" href=\"#login\">\r\n        {user.current}\r\n      </a>\r\n    </Dropdown>\r\n  );\r\n});\r\n","I:\\Reception\\src\\Page\\Theme\\Main\\index.tsx",["148"],"import { observer, useLocalObservable } from \"mobx-react-lite\";\r\nimport { RouteComponentProps } from \"@reach/router\";\r\nimport { autorun } from \"mobx\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport TestUi from \"Page/Theme/Main/TestUi\";\r\nimport Navbar from \"Page/Theme/Main/Navbar\";\r\n\r\ninterface propType {\r\n  path?: RouteComponentProps;\r\n}\r\n\r\nexport default observer((props: propType) => {\r\n  const dim = useLocalObservable(() => ({\r\n    visible: false as any,\r\n  }));\r\n\r\n  const menuHandle = () => {\r\n    let scrollY = window.scrollY;\r\n    let menuEl = document.getElementById(\"navbar\");\r\n    if (scrollY > 0) {\r\n      menuEl?.classList.add(\"scroll\");\r\n    } else {\r\n      menuEl?.classList.remove(\"scroll\");\r\n    }\r\n  };\r\n\r\n  autorun(() => {\r\n    window.onscroll = function () {\r\n      if (window.pageYOffset !== 0) {\r\n        dim.visible = true;\r\n      } else {\r\n        dim.visible = false;\r\n      }\r\n    };\r\n\r\n    if (typeof window !== \"undefined\") {\r\n      window.addEventListener(\"scroll\", menuHandle);\r\n      return () => window.removeEventListener(\"scroll\", menuHandle);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\r\n        <title>Reception Card App</title>\r\n      </Helmet>\r\n      <div className=\"bg-red-700 h-screen\">\r\n        <Navbar />\r\n        <div className=\"flex flex-col\">{/* <TestUi /> */}</div>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n","I:\\Reception\\src\\Page\\Theme\\Main\\Navbar.tsx",["149","150","151","152","153","154","155","156"],"import { observer, useLocalObservable } from \"mobx-react-lite\";\r\nimport Dropdown from \"libs/ui/Dropdown\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\n\r\nexport default observer(() => {\r\n  const meta = useLocalObservable(() => ({ open: false as any }));\r\n\r\n  return (\r\n    <div id=\"navbar\" className=\"w-full bg-transparent p-10 md:p-5\">\r\n      <div className=\"flex flex-row items-center lg:py-2 lg:px-8 md:py-4 md:px-5 font-bold text-black rounded-full lg:bg-yellow-50\">\r\n        <div className=\"w-1/2\">\r\n          <label>Reception App</label>\r\n        </div>\r\n        <div className=\"w-1/2 invisible lg:visible flex flex-row justify-evenly\">\r\n          <a href=\"#\">Beranda</a>\r\n          <a href=\"#\">Tentang</a>\r\n          <a href=\"#\">Map</a>\r\n          <a href=\"#\">Kontak</a>\r\n        </div>\r\n        <div className=\"lg:invisible md:visible justify-end\">\r\n          <Mobile open={meta.open} onclick={() => (meta.open = !meta.open)} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Mobile = observer(({ open, onclick }: any) => {\r\n  return (\r\n    <Dropdown caption={<DehazeIcon />} open={open} onClick={onclick}>\r\n      <a\r\n        href=\"#\"\r\n        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\r\n        role=\"menuitem\"\r\n      >\r\n        Beranda\r\n      </a>\r\n      <a\r\n        href=\"#\"\r\n        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\r\n        role=\"menuitem\"\r\n      >\r\n        Tentang\r\n      </a>\r\n      <a\r\n        href=\"#\"\r\n        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\r\n        role=\"menuitem\"\r\n      >\r\n        Map\r\n      </a>\r\n      <a\r\n        href=\"#\"\r\n        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\r\n        role=\"menuitem\"\r\n      >\r\n        Kontak\r\n      </a>\r\n    </Dropdown>\r\n  );\r\n});\r\n","I:\\Reception\\src\\Page\\Landing\\Login.tsx",["157"],"import { observer, useLocalObservable } from \"mobx-react-lite\";\r\nimport { runInAction } from \"mobx\";\r\nimport TextInput from \"libs/ui/TextInput\";\r\nimport Button from \"libs/ui/Button\";\r\nimport Text from \"libs/ui/Text\";\r\nimport Image from \"libs/ui/Image\";\r\nimport { user } from \"Page/Landing\";\r\n\r\nexport default observer(() => {\r\n  const meta = useLocalObservable(() => ({\r\n    email: \"\" as string,\r\n    password: \"\" as string,\r\n  }));\r\n\r\n  const handleEmail: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    const value = e?.target?.value;\r\n    const name = e.target.name;\r\n\r\n    runInAction(() => (meta.email = value));\r\n  };\r\n\r\n  const handlePassword: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    const value = e?.target?.value;\r\n\r\n    runInAction(() => (meta.password = value));\r\n  };\r\n\r\n  const submit = () => {\r\n    runInAction(() => null);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"login\"\r\n      className=\"flex flex-col justify-center items-center px-32 py-4 mt-10\"\r\n    >\r\n      <Text className=\"text-blue text-4xl font-bold text-center mt-5\">\r\n        Login\r\n      </Text>\r\n      <Text className=\"text-gray lg:text-xl text-lg text-center mt-2 mb-10\">\r\n        Welcome back!\r\n      </Text>\r\n      <div className=\"border-2 border-gray lg:w-3/5 px-4\">\r\n        <div className=\"flex flex-col justify-center items-center \">\r\n          <form className=\"flex flex-col mt-10\" onSubmit={submit}>\r\n            <TextInput\r\n              className=\"lg:w-96 border-gray border-2 pl-2\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              placeholder=\"youremail@mail.com\"\r\n              name=\"email\"\r\n              value={meta.email}\r\n              onChange={handleEmail}\r\n            />\r\n            <TextInput\r\n              className=\"lg:w-96 border-gray border-2 pl-2\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"xxxxxx\"\r\n              name=\"password\"\r\n              value={meta.password}\r\n              onChange={handlePassword}\r\n            />\r\n          </form>\r\n          <Text className=\"text-gray text-lg text-center py-7\">\r\n            Or login with\r\n          </Text>\r\n          <div className=\"flex flex-row\">\r\n            <Image\r\n              src={\"assets/image/fb-icon.png\"}\r\n              className=\"w-20 px-5\"\r\n              alt=\"fb\"\r\n            />\r\n            <Image\r\n              src={\"assets/image/google-icon.png\"}\r\n              className=\"w-20 px-5\"\r\n              alt=\"google\"\r\n            />\r\n          </div>\r\n          <Button caption=\"Login\" className=\"w-64 bg-blue text-white\" />\r\n          <Text className=\"text-gray text-lg text-center mb-10\">\r\n            Don't have an account?{\" \"}\r\n            <a\r\n              href=\"#login\"\r\n              onClick={() => (user.current = \"Register\")}\r\n              className=\"text-blue\"\r\n            >\r\n              Register\r\n            </a>\r\n          </Text>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","I:\\Reception\\src\\libs\\ui\\Button.tsx",["158"],"import { observer } from \"mobx-react-lite\";\r\nimport _ from \"lodash\";\r\n\r\nexport default observer((props: any) => {\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      type=\"button\"\r\n      className={\r\n        props.className +\r\n        \" inline-flex justify-center items-center rounded-md border border-transparent shadow-sm px-4 py-2 text-base font-medium focus:outline-none sm:ml-3 sm:text-sm my-5\"\r\n      }\r\n      style={props.style}\r\n    >\r\n      {props.caption}\r\n    </button>\r\n  );\r\n});\r\n","I:\\Reception\\src\\libs\\ui\\Image.tsx",["159"],"import { observer } from \"mobx-react-lite\";\r\n\r\ninterface propTypes {\r\n  onClick?: () => {};\r\n  src: any;\r\n  className?: string;\r\n  style?: any;\r\n  width?: any;\r\n  height?: any;\r\n  alt?: string;\r\n}\r\n\r\nexport default observer((props: propTypes) => {\r\n  return (\r\n    <button\r\n      className=\"p-0 m-0 outline-none focus:outline-none\"\r\n      onClick={props.onClick}\r\n    >\r\n      <img {...props} />\r\n    </button>\r\n  );\r\n});\r\n","I:\\Reception\\src\\Page\\Landing\\Register.tsx",["160","161"],"import { observer, useLocalObservable } from \"mobx-react-lite\";\r\nimport { runInAction } from \"mobx\";\r\nimport TextInput from \"libs/ui/TextInput\";\r\nimport Button from \"libs/ui/Button\";\r\nimport Text from \"libs/ui/Text\";\r\nimport Image from \"libs/ui/Image\";\r\nimport { user } from \"Page/Landing\";\r\n\r\nexport default observer(() => {\r\n  const meta = useLocalObservable(() => ({\r\n    email: \"\" as string,\r\n    password: \"\" as string,\r\n    confirmPass: \"\" as string,\r\n  }));\r\n\r\n  const handleEmail: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    const value = e?.target?.value;\r\n    const name = e.target.name;\r\n\r\n    runInAction(() => (meta.email = value));\r\n  };\r\n\r\n  const handlePassword: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    const value = e?.target?.value;\r\n\r\n    runInAction(() => (meta.password = value));\r\n  };\r\n\r\n  const submit = () => {\r\n    runInAction(() => null);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"login\"\r\n      className=\"flex flex-col justify-center items-center px-32 py-4  mt-10\"\r\n    >\r\n      <Text className=\"text-blue text-4xl font-bold text-center mt-16\">\r\n        Register\r\n      </Text>\r\n      <Text className=\"text-gray text-xl text-center mt-2 mb-10\">\r\n        Let's get in touch!\r\n      </Text>\r\n      <div className=\"border-2 border-gray lg:w-3/5 px-4\">\r\n        <div className=\"flex flex-col justify-center items-center \">\r\n          <form className=\"flex flex-col mt-10\">\r\n            <TextInput\r\n              className=\"lg:w-96 border-gray border-2 pl-2\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              placeholder=\"youremail@mail.com\"\r\n              name=\"email\"\r\n              value={meta.email}\r\n              onChange={handleEmail}\r\n            />\r\n            <TextInput\r\n              className=\"lg:w-96 border-gray border-2 pl-2\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"xxxxxx\"\r\n              name=\"password\"\r\n              value={meta.password}\r\n              onChange={handlePassword}\r\n            />\r\n            <TextInput\r\n              className=\"lg:w-96 border-gray border-2 pl-2\"\r\n              type=\"password\"\r\n              label=\"Confirm Password\"\r\n              placeholder=\"xxxxxx\"\r\n              name=\"confirmPass\"\r\n              value={meta.confirmPass}\r\n              onChange={handlePassword}\r\n            />\r\n          </form>\r\n          <Text className=\"text-gray text-lg text-center py-7\">\r\n            Or register with\r\n          </Text>\r\n          <div className=\"flex flex-row\">\r\n            <Image\r\n              src={\"assets/image/fb-icon.png\"}\r\n              className=\"w-20 px-5\"\r\n              alt=\"fb\"\r\n            />\r\n            <Image\r\n              src={\"assets/image/google-icon.png\"}\r\n              className=\"w-20 px-5\"\r\n              alt=\"google\"\r\n            />\r\n          </div>\r\n          <Button caption=\"Register\" className=\"w-64 bg-blue text-white\" />\r\n          <Text className=\"text-gray text-lg text-center mb-10\">\r\n            Have an account?{\" \"}\r\n            <a\r\n              href=\"#login\"\r\n              onClick={() => (user.current = \"Login\")}\r\n              className=\"text-blue\"\r\n            >\r\n              Login\r\n            </a>\r\n          </Text>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","I:\\Reception\\src\\Page\\Landing\\Whatis.tsx",[],"I:\\Reception\\src\\Page\\Landing\\About.tsx",["162","163"],"I:\\Reception\\src\\Page\\Landing\\Pricing.tsx",["164"],"import { observer } from \"mobx-react-lite\";\r\nimport Text from \"libs/ui/Text\";\r\n\r\nexport default observer(() => {\r\n  return (\r\n    <div id=\"price\" className=\"flex flex-col w-screen\">\r\n      <div className=\"bg-blue\"></div>\r\n      <div className=\"lg:w-1/2 bg-blue\"></div>\r\n    </div>\r\n  );\r\n});\r\n","I:\\Reception\\src\\Page\\Theme\\index.tsx",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":1,"column":20,"nodeType":"171","messageId":"172","endLine":1,"endColumn":38},{"ruleId":"173","severity":1,"message":"174","line":7,"column":9,"nodeType":"175","endLine":7,"endColumn":21},{"ruleId":"173","severity":1,"message":"174","line":8,"column":9,"nodeType":"175","endLine":8,"endColumn":21},{"ruleId":"173","severity":1,"message":"174","line":9,"column":9,"nodeType":"175","endLine":9,"endColumn":21},{"ruleId":"165","replacedBy":"176"},{"ruleId":"167","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":80,"column":25,"nodeType":"180","messageId":"181","endLine":80,"endColumn":27},{"ruleId":"173","severity":1,"message":"174","line":27,"column":11,"nodeType":"175","endLine":27,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":28,"column":11,"nodeType":"175","endLine":28,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":61,"column":7,"nodeType":"175","endLine":65,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":68,"column":7,"nodeType":"175","endLine":72,"endColumn":8},{"ruleId":"169","severity":1,"message":"182","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":14},{"ruleId":"173","severity":1,"message":"174","line":15,"column":11,"nodeType":"175","endLine":15,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":16,"column":11,"nodeType":"175","endLine":16,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":17,"column":11,"nodeType":"175","endLine":17,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":18,"column":11,"nodeType":"175","endLine":18,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":31,"column":7,"nodeType":"175","endLine":35,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":38,"column":7,"nodeType":"175","endLine":42,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":45,"column":7,"nodeType":"175","endLine":49,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":52,"column":7,"nodeType":"175","endLine":56,"endColumn":8},{"ruleId":"169","severity":1,"message":"183","line":17,"column":11,"nodeType":"171","messageId":"172","endLine":17,"endColumn":15},{"ruleId":"169","severity":1,"message":"184","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":9},{"ruleId":"185","severity":1,"message":"186","line":19,"column":7,"nodeType":"175","endLine":19,"endColumn":25},{"ruleId":"169","severity":1,"message":"183","line":18,"column":11,"nodeType":"171","messageId":"172","endLine":18,"endColumn":15},{"ruleId":"169","severity":1,"message":"187","line":29,"column":9,"nodeType":"171","messageId":"172","endLine":29,"endColumn":15},{"ruleId":"169","severity":1,"message":"188","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":13},{"ruleId":"169","severity":1,"message":"189","line":5,"column":10,"nodeType":"171","messageId":"172","endLine":5,"endColumn":16},{"ruleId":"169","severity":1,"message":"190","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":12},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"@typescript-eslint/no-unused-vars","'useLocalObservable' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["191"],["192"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'TestUi' is defined but never used.","'name' is assigned a value but never used.","'_' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'submit' is assigned a value but never used.","'css' is defined but never used.","'Helmet' is defined but never used.","'Text' is defined but never used.","no-global-assign","no-unsafe-negation"]